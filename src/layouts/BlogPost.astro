---
import StructuredData from '../components/StructuredData.astro';
import { readingTime } from '../lib/readingTime';
import { canonicalFor, siteConfig } from '../lib/siteConfig';

import Layout from './Layout.astro';

interface Props {
  title: string;
  description: string;
  pubDate: Date;
  updatedDate?: Date;
  tags: string[];
  heroImage?: string;
  canonical?: string;
  draft?: boolean;
  bodyHtml: string;
}

const { title, description, pubDate, updatedDate, tags, heroImage, canonical, bodyHtml } = Astro.props as Props;
const rt = readingTime(bodyHtml.replace(/<[^>]+>/g, '')); // strip HTML for counting
const pageCanonical = canonical || canonicalFor(Astro.url.pathname);

const articleLd = {
  '@context': 'https://schema.org',
  '@type': 'Article',
  headline: title,
  description,
  author: siteConfig.author,
  datePublished: pubDate.toISOString(),
  dateModified: (updatedDate || pubDate).toISOString(),
  mainEntityOfPage: pageCanonical,
  image: heroImage ? [heroImage] : undefined,
  publisher: {
    '@type': 'Organization',
    name: siteConfig.title
  }
};
---
<Layout title={title} description={description} canonical={pageCanonical}>
  <Fragment slot="head">
    <StructuredData data={articleLd} />
  </Fragment>
  <article>
    <header style="margin-bottom:var(--space-6);">
      <h1 style="margin-bottom:var(--space-3);">{title}</h1>
      <p class="muted" style="font-size:var(--font-size-sm);">
        <time datetime={pubDate.toISOString()}>{pubDate.toLocaleDateString(undefined,{dateStyle:'medium'})}</time>
        {updatedDate && updatedDate.toISOString() !== pubDate.toISOString() && (
          <span> · Updated <time datetime={updatedDate.toISOString()}>{updatedDate.toLocaleDateString(undefined,{dateStyle:'medium'})}</time></span>
        )}
        <span> · {rt.minutes} min read</span>
      </p>
      {tags.length > 0 && (
        <ul style="display:flex;gap:var(--space-2);flex-wrap:wrap;list-style:none;padding:0;margin:var(--space-3)_0_0;">
          {tags.map(t => <li style="background:var(--color-surface-subtle);padding:2px 8px;border-radius:var(--radius-sm);font-size:var(--font-size-xs);"><a href={`/blog/tags/${encodeURIComponent(t.toLowerCase())}`}>{t}</a></li>)}
        </ul>
      )}
      {heroImage && <img src={heroImage} alt="" style="margin-top:var(--space-5);max-width:100%;border-radius:var(--radius-md);" />}
    </header>
    <div class="prose" set:html={bodyHtml} />
  </article>
</Layout>
